upstream app {
	server app:8081;
	keepalive 256;
}

server {
	listen 8080;

	location = /get-key-value {
		internal;
		set $key $arg_key;
		redis2_query get $key;
		redis2_pass $REDIS_URL;
		add_header Content-Disposition "inline";
	}

	location = /get-redirect-url {
		internal;
		content_by_lua_block {
			local res = ngx.location.capture("/get-key-value?key=redirect:"..ngx.var.arg_id)
			if res.status ~= ngx.HTTP_OK then
				ngx.exit(res.status)
			end
			local body = string.gsub(res.body, "%$%-?[0-9]+\r\n", "");
			if body == "" then
				ngx.exit(ngx.HTTP_NOT_FOUND)
			end
			local url = string.gmatch(body, "[^\r\n]+")()
			ngx.print(url)
		}
	}

	location ~ ^/dl/([0-9a-f\-]+)(?:/(.*))? {
		set $redirect_id $1;
		set $redirect_url "";
		rewrite_by_lua_block {
			local res = ngx.location.capture("/get-redirect-url?id="..ngx.var.redirect_id)
			if res.status ~= ngx.HTTP_OK then
				ngx.exit(res.status)
			end
			ngx.var.redirect_url = res.body
		}
		resolver 8.8.8.8;
		proxy_pass $redirect_url;
		if ($arg_inline = "true") {
			header_filter_by_lua_block {
				ngx.header["content-disposition"] = ngx.header["content-disposition"] and string.gsub(ngx.header["content-disposition"], "attachment", "inline") or "inline"
			}
		}
	}

	# Strip trailing slashes
	location ~ ^/(.*?)/+$ {
		# Redirect to path without slash, respecting request protocol
		set $redirect_scheme $scheme;
		if ($http_x_forwarded_proto) {
			set $redirect_scheme $http_x_forwarded_proto;
		}
		rewrite ^/(.*?)/+$ $redirect_scheme://$host/$1 permanent;
	}

	location / {
		# Pass request through to main app
		proxy_pass http://app;
		proxy_set_header Connection "";
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# Elastic Beanstalk Health monitoring
		if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
			set $year $1;
			set $month $2;
			set $day $3;
			set $hour $4;
		}
		access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
		access_log /var/log/nginx/access.log main;

		# HACK: root needs to be specified to allow variables in access log
		# (see http://nginx.org/en/docs/http/ngx_http_log_module.html#access_log)
		root /var/www;
	}
}
